library(AnnotationDbi)
library(GEOquery)
library(limma)
library(umap)
library(viridis)
library(ggpubr)
library(survival)
library(survminer)
library(emmeans)
library(car)
library(corrplot)
library(correlation)
library(splitstackshape)
library(gridExtra)
library(patchwork)
library(STRINGdb)
library(glue)
knitr::opts_chunk$set(echo = TRUE)
# Prepare data to have ENSEMBLE annotation
deg.prep <- function(id){
k <- get(paste0(id,'.seq.data'))
k <- k[["sig.degs"]]
if ("2597" %in% k$Gene){anno <- "ENTREZID"}
if ("ENSG00000111640" %in% k$Gene){anno <- "ENSEMBL"}
if ("GAPDH" %in% k$Gene){anno <- "SYMBOL"}
k <- k %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(logFC < -0.5 | logFC > 0.5) %>% dplyr::select(-c(padj))
colnames(k) <- c(anno, id)
if (anno == "ENTREZID"){c <- bitr(k[[anno]], fromType = c(anno),toType = c("ENSEMBL"), OrgDb = org.Hs.eg.db)
kk <- merge(k,c,by.y=anno) %>% dplyr::select(-c(anno)) %>% rename("Gene" = "ENSEMBL")
return(kk)}
if (anno == "SYMBOL"){c <- bitr(k[[anno]], fromType = c(anno),toType = c("ENSEMBL"), OrgDb = org.Hs.eg.db)
kk <- merge(k,c,by.y=anno) %>% dplyr::select(-c(anno)) %>% rename("Gene" = "ENSEMBL")
return(kk)}
else{colnames(k) <- c("Gene", id)
return(k)}}
View(GSE68719.seq.data)
# create an empty list
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
View(GSE68719.seq.data)
# Prepare data to have ENSEMBLE annotation
deg.prep <- function(id){
k <- get(paste0(id,'.seq.data'))
k <- k[["degs"]]
if ("2597" %in% k$Gene){anno <- "ENTREZID"}
if ("ENSG00000111640" %in% k$Gene){anno <- "ENSEMBL"}
if ("GAPDH" %in% k$Gene){anno <- "SYMBOL"}
k <- k %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(logFC < -0.5 | logFC > 0.5) %>% dplyr::select(-c(padj))
colnames(k) <- c(anno, id)
if (anno == "ENTREZID"){c <- bitr(k[[anno]], fromType = c(anno),toType = c("ENSEMBL"), OrgDb = org.Hs.eg.db)
kk <- merge(k,c,by.y=anno) %>% dplyr::select(-c(anno)) %>% rename("Gene" = "ENSEMBL")
return(kk)}
if (anno == "SYMBOL"){c <- bitr(k[[anno]], fromType = c(anno),toType = c("ENSEMBL"), OrgDb = org.Hs.eg.db)
kk <- merge(k,c,by.y=anno) %>% dplyr::select(-c(anno)) %>% rename("Gene" = "ENSEMBL")
return(kk)}
else{colnames(k) <- c("Gene", id)
return(k)}}
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
# merge data and convert genes to SYMBOL
df <- join_all(df,by="Gene",match = "all") %>% rename("ENSEMBL" = "Gene")
c <- bitr(df$ENSEMBL, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db)
df <- merge(df,c,by.y="ENSEMBL") %>% dplyr::select(-c("ENSEMBL")) %>% rename("Gene" = "SYMBOL")
AD.deg.all <- df[!duplicated(df$Gene),] %>% remove_rownames() %>% column_to_rownames(var = "Gene")
View(AD.deg.all)
View(AD.deg.all)
data <- AD.deg.all
data[is.na(data)] <- 0
set.seed(100)
AD.heatmap.all <- pheatmap(data, angle_col = 45, show_colnames = T, color = viridis(100),
cluster_rows = T,kmeans_k = 20, cluster_cols = T,
show_rownames = T,fontsize = 14)
AD.heatmap.all
set.seed(100)
AD.heatmap.all <- pheatmap(data, angle_col = 45, show_colnames = T,
cluster_rows = T,kmeans_k = 20, cluster_cols = T,
show_rownames = T,fontsize = 14)
AD.heatmap.all
set.seed(100)
AD.heatmap.all <- pheatmap(data, angle_col = 45, show_colnames = T,
cluster_rows = T,kmeans_k = 3, cluster_cols = T,
show_rownames = T,fontsize = 14)
set.seed(100)
AD.heatmap.all <- pheatmap(data, angle_col = 45, show_colnames = T,
cluster_rows = T,kmeans_k = 2, cluster_cols = T,
show_rownames = T,fontsize = 14)
set.seed(100)
AD.heatmap.all <- pheatmap(data, angle_col = 45, show_colnames = T,
cluster_rows = T,kmeans_k = 40, cluster_cols = T,
show_rownames = T,fontsize = 14)
set.seed(100)
AD.heatmap.all <- pheatmap(data, angle_col = 45, show_colnames = T,
cluster_rows = T,kmeans_k = 100, cluster_cols = T,
show_rownames = T,fontsize = 14)
df <- list()
# make sure data with the most genes is first
zz <- c("GSE172409","GSE110716","GSE165082","GSE135743","GSE68719","GSE120746","GSE28894","GSE43490","GSE49036")
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
df <- list()
# make sure data with the most genes is first
zz <- c("GSE172409","GSE110716","GSE165082","GSE135743","GSE68719","GSE120746","GSE28894","GSE43490","GSE49036")
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
df <- list()
# make sure data with the most genes is first
zz <- c("GSE172409","GSE165082","GSE135743","GSE68719","GSE120746","GSE28894","GSE43490","GSE49036")
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
df <- list()
# make sure data with the most genes is first
zz <- c("GSE172409","GSE135743","GSE68719","GSE120746","GSE28894","GSE43490","GSE49036")
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
# merge data and convert genes to SYMBOL
df <- join_all(df,by="Gene",match = "all") %>% rename("ENSEMBL" = "Gene")
c <- bitr(df$ENSEMBL, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db)
df <- merge(df,c,by.y="ENSEMBL") %>% dplyr::select(-c("ENSEMBL")) %>% rename("Gene" = "SYMBOL")
PD.deg.all <- df[!duplicated(df$Gene),] %>% remove_rownames() %>% column_to_rownames(var = "Gene")
View(PD.deg.all)
df <- list()
# make sure data with the most genes is first
zz <- c("GSE172409","GSE135743","GSE68719","GSE120746","GSE28894","GSE43490","GSE49036")
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
View(df)
View(df)
# create an empty list
df <- list()
# make sure data with the most genes is first
zz <- c("GSE68719","GSE172409","GSE135743","GSE120746","GSE28894","GSE43490","GSE49036")
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
# merge data and convert genes to SYMBOL
df <- join_all(df,by="Gene",match = "all") %>% rename("ENSEMBL" = "Gene")
c <- bitr(df$ENSEMBL, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db)
df <- merge(df,c,by.y="ENSEMBL") %>% dplyr::select(-c("ENSEMBL")) %>% rename("Gene" = "SYMBOL")
PD.deg.all <- df[!duplicated(df$Gene),] %>% remove_rownames() %>% column_to_rownames(var = "Gene")
View(PD.deg.all)
# Data refinement
data <- PD.deg.all
data[is.na(data)] <- 0
set.seed(100)
PD.heatmap.all <- pheatmap(data, angle_col = 45, show_colnames = T, color = viridis(100),
cluster_rows = T,kmeans_k = 20, cluster_cols = T,
show_rownames = T,fontsize = 14)
set.seed(100)
PD.heatmap.all <- pheatmap(data, angle_col = 45, show_colnames = T,
cluster_rows = T,kmeans_k = 20, cluster_cols = T,
show_rownames = T,fontsize = 14)
View(GSE67196.seq.data)
View(GSE104704.seq.data)
id <- "GSE104704"
k <- get(paste0(id,'.seq.data'))
View(k)
k <- k[["counts"]]
View(k)
k <- get(paste0(id,'.seq.data'))
k <- k[["meta"]]
k <- get(paste0(id,'.seq.data'))
k <- k[["meta"]] %>% dplyr::filter(condition == "DIS")
k <- k[["counts"]]
k <- get(paste0(id,'.seq.data'))
k <- k[["counts"]]
kk <- k[["meta"]] %>% dplyr::filter(condition == "DIS")
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]]
kkk <- k[["meta"]] %>% dplyr::filter(condition == "DIS")
View(kkk)
View(kk)
idx <- rownames(kkk)
cts  <- kk[ , idx]
View(kkk)
View(cts)
View(kk)
View(kkk)
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
View(df)
View(df)
# merge data and convert genes to SYMBOL
df <- join_all(df,by="Gene",match = "all",type = "right") %>% rename("ENSEMBL" = "Gene")
View(df)
# merge data and convert genes to SYMBOL
df <- join_all(df,by="Gene",match = "all",type = "left") %>% rename("ENSEMBL" = "Gene")
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
# merge data and convert genes to SYMBOL
df <- join_all(df,by="Gene",match = "all",type = "left") %>% rename("ENSEMBL" = "Gene")
View(df)
View(GSE104704.seq.data)
# create an empty list
df <- data.frame(Gene=c())
View(df)
df <- rbind(df,GSE104704.seq.data[["sig.degs"]][["Gene"]])
View(df)
df <- data.frame(Gene=c())
df <- cbind(df,GSE104704.seq.data[["sig.degs"]][["Gene"]])
# create an empty list
df <- data.frame(Gene= "ENSG00000111640")
View(df)
df <- cbind(df,GSE104704.seq.data[["sig.degs"]][["Gene"]])
View(df)
# create an empty list
df <- data.frame(Gene= "ENSG00000111640")
df <- rbind(df,GSE104704.seq.data[["sig.degs"]][["Gene"]])
View(df)
# create an empty list
df <- data.frame(Gene= "ENSG00000111640")
View(df)
df1 <- rbind(df,GSE104704.seq.data[["sig.degs"]][["Gene"]])
View(df1)
df1 <- cbind(df,GSE104704.seq.data[["sig.degs"]][["Gene"]])
View(df1)
# create an empty list
df <- list()
# Prepare data to have ENSEMBLE annotation
deg.prep <- function(id){
k <- get(paste0(id,'.seq.data'))
k <- k[["degs"]]
if ("2597" %in% k$Gene){anno <- "ENTREZID"}
if ("ENSG00000111640" %in% k$Gene){anno <- "ENSEMBL"}
if ("GAPDH" %in% k$Gene){anno <- "SYMBOL"}
k <- k %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(logFC < -0.5 | logFC > 0.5) %>% dplyr::select(-c(padj))
colnames(k) <- c(anno, id)
if (anno == "ENTREZID"){c <- bitr(k[[anno]], fromType = c(anno),toType = c("ENSEMBL"), OrgDb = org.Hs.eg.db)
kk <- merge(k,c,by.y=anno) %>% dplyr::select(-c(anno)) %>% rename("Gene" = "ENSEMBL")
return(kk)}
if (anno == "SYMBOL"){c <- bitr(k[[anno]], fromType = c(anno),toType = c("ENSEMBL"), OrgDb = org.Hs.eg.db)
kk <- merge(k,c,by.y=anno) %>% dplyr::select(-c(anno)) %>% rename("Gene" = "ENSEMBL")
return(kk)}
else{colnames(k) <- c("Gene", id)
return(k$Gene)}}
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
a <- deg.prep(i)
df[[i]] <- a}
View(df)
View(df)
View(df)
k <- df[["GSE193438"]]
View(GSE49036.seq.data)
k <- get(paste0(id,'.seq.data'))
k <- k[["sig.degs"]][["Gene"]]
k <- get(paste0(id,'.seq.data'))
k <- data.frame(Gene = [["sig.degs"]][["Gene"]])
k <- get(paste0(id,'.seq.data'))
k <- data.frame(k[["sig.degs"]][["Gene"]])
View(k)
k <- get(paste0(id,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
View(k)
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
View(df)
df <- do.call("rbind", df)
View(df)
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
df <- do.call("rbind", df) # rbind list
AD.deg.all <- df[!duplicated(df$Gene),] %>% remove_rownames()
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
df <- do.call("rbind", df) # rbind list
View(df)
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
df <- as.data.frame(do.call("rbind", df)) # rbind list
AD.deg.all <- df[!duplicated(df$Gene),] %>% remove_rownames()
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
df <- as.data.frame(do.call("rbind", df))
View(df)
typeof
typeof(df)
AD.deg.all <- df[!duplicated(df$Gene),]
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
df <- do.call("rbind", df) # rbind list
AD.deg.all <- as.data.frame(df[!duplicated(df$Gene),]) %>% remove_rownames()
View(AD.deg.all)
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
df <- do.call("rbind", df) # rbind list
AD.deg.all <- data.frame(Gene = df[!duplicated(df$Gene),]) %>% remove_rownames()
View(AD.deg.all)
View(cts)
View(GSE138260.seq.data)
head(GSE138260.seq.data[["counts"]])
View(GSE28894.seq.data)
View(AD.deg.all)
View(cts)
View(cts)
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]]
kkk <- k[["meta"]] %>% dplyr::filter(condition == "DIS")
idx <- rownames(kkk)
cts  <- kk[ , idx] %>% rownames_to_column("Gene")
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
df <- do.call("rbind", df) # rbind list
df <- data.frame(Gene = df[!duplicated(df$Gene),]) %>% remove_rownames()
View(df)
c <- bitr(df$Gene, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db)
View(c)
c <- bitr(df$Gene, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db)
df <- merge(df,c,by.y="Gene") %>% dplyr::select(-c("ENSEMBL")) %>% rename("Gene" = "SYMBOL")
View(df)
View(c)
c <- bitr(df$Gene, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db) %>% rename("Gene" = "ENSEMBL")
df <- merge(df,c,by.y="Gene") %>% dplyr::select(-c("ENSEMBL")) %>% rename("Gene" = "SYMBOL")
c <- bitr(df$Gene, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db) %>% rename("Gene" = "ENSEMBL")
View(c)
df <- merge(df,c,by.y="Gene")
View(df)
c <- bitr(df$Gene, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db) %>% rename("Gene" = "ENSEMBL")
df <- merge(df,c,by.y="Gene") %>% dplyr::select(-c("Gene")) %>% rename("Gene" = "SYMBOL")
c <- bitr(df$Gene, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db) %>% rename("Gene" = "ENSEMBL")
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
df <- do.call("rbind", df) # rbind list
df <- data.frame(Gene = df[!duplicated(df$Gene),]) %>% remove_rownames()
AD.degs <- merge(df,c,by.y="Gene") %>% dplyr::select(-c("Gene")) %>% rename("Gene" = "SYMBOL")
View(AD.degs)
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]]
View(kk)
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] %>% rownames_to_column("Gene")
df <- merge(AD.degs, kk, by.y="Gene", all=F)
View(df)
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] %>% rownames_to_column("Gene")
df <- merge(AD.degs, kk, by.y="Gene", all=F) %>% column_to_rownames("Gene")
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
df <- do.call("rbind", df) # rbind list
df <- data.frame(Gene = df[!duplicated(df$Gene),]) %>% remove_rownames()
c <- bitr(df$Gene, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db) %>% rename("Gene" = "ENSEMBL")
AD.degs <- merge(df,c,by.y="Gene") %>% dplyr::select(-c("Gene")) %>% rename("Gene" = "SYMBOL")
View(AD.degs)
View(AD.degs)
View(kk)
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] %>% rownames_to_column("Gene")
View(kk)
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]]
pheno <- k[["meta"]]
idx <- rownames(AD.degs$Gene)
cts  <- kk[ , idx] #%>% rownames_to_column("Gene")
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] #%>% rownames_to_column("Gene")
#df <- merge(AD.degs, kk, by.y="Gene", all=F) %>% column_to_rownames("Gene")
pheno <- k[["meta"]]
View(pheno)
idx <- AD.degs$Gene
cts  <- kk[ , idx] #%>% rownames_to_column("Gene")
View(AD.degs)
View(kk)
View(kk)
kk <- as.data.frame(t(kk))
cts  <- kk[ , idx] #%>% rownames_to_column("Gene")
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] #%>% rownames_to_column("Gene")
#df <- merge(AD.degs, kk, by.y="Gene", all=F) %>% column_to_rownames("Gene")
pheno <- k[["meta"]]
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] #%>% rownames_to_column("Gene")
df <- merge(AD.degs, kk, by.y="Gene", all=F) %>% column_to_rownames("Gene")
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] #%>% rownames_to_column("Gene")
df <- merge(AD.degs, kk, by.y="Gene", all=F)
df <- list()
# make sure data with the most genes is first
zz <- c('GSE5281','GSE125583','GSE193438','GSE153873','GSE104704',
'GSE15222','GSE122063','GSE132903','GSE48350','GSE110226',
'GSE39420','GSE29378','GSE109887','GSE138260')
for (i in zz){
k <- get(paste0(i,'.seq.data'))
k <- data.frame(Gene = k[["sig.degs"]][["Gene"]])
df[[i]] <- k}
df <- do.call("rbind", df) # rbind list
df <- data.frame(Gene = df[!duplicated(df$Gene),]) %>% remove_rownames()
c <- bitr(df$Gene, fromType = c("ENSEMBL"),toType = c("SYMBOL"), OrgDb = org.Hs.eg.db) %>% rename("Gene" = "ENSEMBL")
AD.degs <- merge(df,c,by.y="Gene") %>% dplyr::select(-c("Gene")) %>% rename("Gene" = "SYMBOL")
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] %>% rownames_to_column("Gene")
df <- merge(AD.degs, kk, by.y="Gene", all=F)
View(df)
rownames(df) <- df$Gene
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] %>% rownames_to_column("Gene")
df <- merge(AD.degs, kk, by.y="Gene", all=F) remove_rownames() %>% column_to_rownames("Gene")
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] %>% rownames_to_column("Gene")
df <- merge(AD.degs, kk, by.y="Gene", all=F) %>%  remove_rownames() %>% column_to_rownames("Gene")
df <- df[!duplicated(df$Gene),] %>% remove_rownames()
k <- get(paste0(id,'.seq.data'))
kk <- k[["counts"]] %>% rownames_to_column("Gene")
df <- merge(AD.degs, kk, by.y="Gene", all=F)
df <- df[!duplicated(df$Gene),] %>% remove_rownames() %>% column_to_rownames("Gene")
View(df)
pheno <- k[["meta"]]
pheatmap(df, angle_col = 45, show_colnames = T, color = viridis(100), annotation_col = pheno
cluster_rows = T,kmeans_k = 20, cluster_cols = T,
pheatmap(df, angle_col = 45, show_colnames = T, color = viridis(100), annotation_col = pheno,
cluster_rows = T,kmeans_k = 20, cluster_cols = T,
show_rownames = T,fontsize = 14)
pheatmap(df, angle_col = 45, show_colnames = F, color = viridis(100), annotation_col = pheno,
cluster_rows = T,kmeans_k = 3, cluster_cols = T,
show_rownames = T,fontsize = 14)
View(df)
